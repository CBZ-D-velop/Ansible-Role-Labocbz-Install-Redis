---
# Don't forget to keep this file updated
# molecule/<scenario>/verify.yml
- name: "Verify"
  hosts: "cicd-debian-11"
  gather_facts: false
  tasks:

    - name: "Verify Redis installations"
      block:
        - name: "Get Redis service current state"
          register: install_redis__service_status
          failed_when: not install_redis__service_status.status.ActiveState == 'active'
          ansible.builtin.systemd:
            name: "redis-server"

        - name: "Check Redis connectivity"
          ansible.builtin.wait_for:
            host: "{{ inventory_hostname }}"
            port: "{{ inv_install_redis__port }}"
            timeout: 120

    - name: "Set args: Auth"
      when: inv_install_redis__requirepass | default(false)
      ansible.legacy.set_fact:
        redis_auth: "-a {{ inv_install_redis__requirepass }} --no-auth-warning"

    - name: "Set args: TLS"
      when: inv_install_redis__ssl | default(false)
      ansible.legacy.set_fact:
        redis_tls: "--tls"

    - name: "Set args: mTLS"
      when: inv_install_redis__ssl_client_auth | default(false)
      ansible.legacy.set_fact:
        redis_mtls: "--cert {{ inv_install_redis__ssl_cert }} --key {{ inv_install_redis__ssl_key }}"

    - name: "Verify PING"
      register: install_redis__result
      failed_when: install_redis__result.stdout != "PONG"
      changed_when: install_redis__result.rc != 0
      ansible.builtin.shell: |
        redis-cli -h {{ inventory_hostname }} -p {{ inv_install_redis__port }} \
        {% if redis_auth | default(false) %}
        {{ redis_auth }} \
        {% endif %}
        {% if redis_tls | default(false) %}
        {{ redis_tls }} \
        {% endif %}
        {% if redis_mtls | default(false) %}
        {{ redis_mtls }} \
        {% endif %}
        ping

    - name: "Verify Redis cluster installations"
      when: inv_install_redis__cluster | default(false)
      block:
        - name: "Get Redis Sentinel service current state"
          register: inv_install_redis__service_status
          failed_when: not install_redis__service_status.status.ActiveState == 'active'
          ansible.builtin.systemd:
            name: "redis-sentinel"

        - name: "Check Redis Sentinel connectivity"
          ansible.builtin.wait_for:
            host: "{{ inventory_hostname }}"
            port: "{{ inv_install_redis__sentinel_port }}"
            timeout: 120

        - name: "Verify role on MASTER"
          register: install_redis__result
          when: inventory_hostname == inv_install_redis__initial_master
          failed_when: install_redis__result.stdout != "role:master"
          changed_when: install_redis__result.rc != 0
          ansible.builtin.shell: |
            redis-cli -h {{ inventory_hostname }} -p {{ inv_install_redis__port }} \
            {% if redis_auth | default(false) %}
            {{ redis_auth }} \
            {% endif %}
            {% if redis_tls | default(false) %}
            {{ redis_tls }} \
            {% endif %}
            {% if redis_mtls | default(false) %}
            {{ redis_mtls }} \
            {% endif %}
            info \
            | grep role:

        - name: "Verify role on SALVE"
          register: install_redis__result
          when: inventory_hostname != inv_install_redis__initial_master
          failed_when: install_redis__result.stdout != "role:slave"
          changed_when: install_redis__result.rc != 0
          ansible.builtin.shell: |
            redis-cli -h {{ inventory_hostname }} -p {{ inv_install_redis__port }} \
            {% if redis_auth | default(false) %}
            {{ redis_auth }} \
            {% endif %}
            {% if redis_tls | default(false) %}
            {{ redis_tls }} \
            {% endif %}
            {% if redis_mtls | default(false) %}
            {{ redis_mtls }} \
            {% endif %}
            info \
            | grep role:
