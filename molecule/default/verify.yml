---
# Don't forget to keep this file updated
# molecule/<scenario>/verify.yml
- name: "Verify"
  hosts: "all"
  gather_facts: false
  tasks:

    - name: "Verify Redis installations"
      block:
        - name: "Get Redis service current state"
          register: install_redis_service_status
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          failed_when: not install_redis_service_status.status.ActiveState == 'active'
          ansible.builtin.systemd:
            name: "redis@{{ port }}"

        - name: "Check Redis conf file"
          register: folder_check
          failed_when: not folder_check.stat.exists
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.stat:
            path: "{{ inv_install_redis_conf }}"

        - name: "Check Redis connectivity"
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.wait_for:
            host: "{{ inventory_hostname }}"
            port: "{{ port }}"
            timeout: 120

    - name: "Verify Redis authentication"
      when: inv_install_redis_requirepass is defined
      block:
        - name: "Verify auth with no client cert, no ssl, but password"
          when: not inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "no"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli -a {{ inv_install_redis_requirepass }} -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

        - name: "Verify auth with client cert, no ssl and password"
          when: not inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "yes"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli --cert {{ inv_install_redis_ssl_cert }} --key {{ inv_install_redis_ssl_key }} -a {{ inv_install_redis_requirepass }} -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

        - name: "Verify auth with no client cert, ssl and password"
          when: inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "no"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli --tls -a {{ inv_install_redis_requirepass }} -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

        - name: "Verify auth with client cert, ssl and password"
          when: inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "yes"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli --tls --cert {{ inv_install_redis_ssl_cert }} --key {{ inv_install_redis_ssl_key }} -a {{ inv_install_redis_requirepass }} -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

    - name: "Verify Redis NO authentication"
      when: not inv_install_redis_requirepass is defined
      block:
        - name: "Verify auth with no client cert, no ssl, but no password"
          when: not inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "no"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

        - name: "Verify auth with client cert, no ssl and no password"
          when: not (inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "yes")
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli --cert {{ inv_install_redis_ssl_cert }} --key {{ inv_install_redis_ssl_key }} -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

        - name: "Verify auth with no client cert, ssl and no password"
          when: inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "no"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli --tls -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"

        - name: "Verify auth with client cert, ssl and no password"
          when: inv_install_redis_ssl and inv_install_redis_ssl_auth_client == "yes"
          register: install_redis_auth_result
          failed_when: install_redis_auth_result.stdout != "PONG"
          changed_when: install_redis_auth_result.rc != 0
          loop: "{{ inv_install_redis_ports }}"
          loop_control:
            loop_var: port
          ansible.builtin.command:
            cmd: "redis-cli --cert {{ inv_install_redis_ssl_cert }} --key {{ inv_install_redis_ssl_key }} -h {{ inventory_hostname }} -p {{ port }} --no-auth-warning ping"
